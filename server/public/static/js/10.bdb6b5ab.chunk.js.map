{"version":3,"sources":["components/contact/contact.component.jsx","pages/contactpage/contact.page.js"],"names":["Contact","userCtx","useContext","UserContext","useState","first_name","last_name","email","phone","message","userData","setUserData","error","setError","success","setSuccess","handleChange","event","target","value","name","onSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","json","res","catch","err","className","style","color","margin","display","width","justifyContent","placeholder","type","onChange","label","required","cols","rows","maxLength","ContactPage"],"mappings":"oNAuIeA,EAlIC,WAEZ,IAAMC,EAAUC,qBAAWC,KAE3B,EAAgCC,mBAAS,CACrCC,WAAYJ,EAAUA,EAAQI,WAAa,GAC3CC,UAAWL,EAAUA,EAAQK,UAAY,GACzCC,MAAON,EAAUA,EAAQM,MAAQ,GACjCC,MAAOP,EAAUA,EAAQO,MAAQ,GACjCC,QAAS,KALb,mBAAOC,EAAP,KAAiBC,EAAjB,KASA,EAA0BP,mBAAS,MAAnC,mBAAOQ,EAAP,KAAcC,EAAd,KACA,EAA8BT,mBAAS,MAAvC,mBAAOU,EAAP,KAAgBC,EAAhB,KAGIV,EAKAK,EALAL,WACAC,EAIAI,EAJAJ,UACAC,EAGAG,EAHAH,MACAC,EAEAE,EAFAF,MACAC,EACAC,EADAD,QAGEO,EAAe,SAAAC,GACjB,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,KACfT,EAAY,2BAAKD,GAAN,kBAAiBU,EAAOD,MAkCvC,OACI,uBAAME,SAtBW,SAAAJ,GACjBA,EAAMK,iBACNC,MAAM,iCAAkC,CACtCC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBvB,aACAC,YACAC,QACAC,QACAC,cAGHoB,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLjB,EAAWiB,EAAIvB,YAEfoB,UA1BFlB,EAAY,CACRN,WAAYJ,EAAUA,EAAQI,WAAa,GAC3CC,UAAWL,EAAUA,EAAQK,UAAY,GACzCC,MAAON,EAAUA,EAAQM,MAAQ,GACjCC,MAAOP,EAAUA,EAAQO,MAAQ,GACjCC,QAAS,MAqBOwB,OAAM,SAACC,GAAOrB,EAASqB,OAKbC,UAAU,oBAAxC,UACI,0CACA,yFACEvB,EAAQ,oBAAIwB,MAAO,CAACC,MAAO,MAAOC,OAAQ,KAAlC,SAA0C1B,IAAc,KAChEE,EAAU,oBAAIsB,MAAO,CAACC,MAAO,QAASC,OAAQ,KAApC,SAA4CxB,IAAgB,KACxE,sBAAKqB,UAAU,iBAAf,UACI,sBAAKC,MAAO,CAACG,QAAS,OAAQC,MAAO,OAAQC,eAAgB,gBAA7D,UACI,uBACIN,UAAU,gBACVO,YAAY,SACZtB,KAAK,aACLuB,KAAK,OACLC,SAAU5B,EACVG,MAAOd,EACPwC,MAAM,SACNC,UAAQ,IAEZ,uBACIX,UAAU,gBACVO,YAAY,WACZtB,KAAK,YACLuB,KAAK,OACLxB,MAAOb,EACPsC,SAAU5B,EACV6B,MAAM,WACNC,UAAQ,OAGhB,sBAAKV,MAAO,CAACG,QAAS,OAAQC,MAAO,OAAQC,eAAgB,gBAA7D,UACI,uBACIN,UAAU,gBACVO,YAAY,qBACZtB,KAAK,QACLuB,KAAK,QACLxB,MAAOZ,EACPqC,SAAU5B,EACV6B,MAAM,QACNC,UAAQ,IAEZ,uBACIX,UAAU,gBACVO,YAAY,WACZtB,KAAK,QACLuB,KAAK,OACLxB,MAAOX,EACPoC,SAAU5B,EACV6B,MAAM,WACNC,UAAQ,OAIhB,qBAAKV,MAAO,CAACG,QAAS,OAAQC,MAAO,OAAQC,eAAgB,gBAA7D,SACI,0BACIM,KAAK,MACLC,KAAK,KACLC,UAAU,MACVP,YAAY,4CACZvB,MAAOV,EACPmC,SAAU5B,EACVI,KAAK,iBAKjB,wBAAQe,UAAU,iBAAiBQ,KAAK,SAAxC,gCCpHGO,UAVK,WAChB,OACI,qBAAKf,UAAU,yBAAf,SACI,qBAAKA,UAAU,iCAAf,SACI,cAAC,EAAD","file":"static/js/10.bdb6b5ab.chunk.js","sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { UserContext} from \"../../context/userContext/user.context\";\r\nimport './contact.styles.css';\r\n\r\n\r\nconst Contact = () => {\r\n\r\n    const userCtx = useContext(UserContext)\r\n\r\n    const [userData, setUserData] = useState({\r\n        first_name: userCtx ? userCtx.first_name : '', \r\n        last_name: userCtx ? userCtx.last_name : '',\r\n        email: userCtx ? userCtx.email : '',\r\n        phone: userCtx ? userCtx.phone : '',\r\n        message: '',\r\n\r\n    })\r\n\r\n    const [error, setError] = useState(null);\r\n    const [success, setSuccess] = useState(null);\r\n\r\n    const { \r\n        first_name,\r\n        last_name,\r\n        email,\r\n        phone,\r\n        message,\r\n    } = userData;\r\n\r\n    const handleChange = event => {\r\n        const { value, name } = event.target;    \r\n        setUserData({ ...userData, [name]: value });\r\n      };\r\n    \r\n    const cleanForm = () => {\r\n        setUserData({\r\n            first_name: userCtx ? userCtx.first_name : '', \r\n            last_name: userCtx ? userCtx.last_name : '',\r\n            email: userCtx ? userCtx.email : '',\r\n            phone: userCtx ? userCtx.phone : '',\r\n            message: '',\r\n        })\r\n    }\r\n    \r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        fetch(\"https://localhost:3001/contact\", {\r\n          method: \"post\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({\r\n            first_name,\r\n            last_name,\r\n            email,\r\n            phone,\r\n            message,\r\n          }),\r\n        })\r\n        .then((response) => response.json())\r\n        .then((res) => {\r\n          setSuccess(res.message)\r\n          }\r\n        ).then(cleanForm()).catch((err)=>{setError(err)})\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"contact-container\">\r\n            <h1>CONTACTO</h1>\r\n            <h2>Tienes alguna consulta? Te responderemos a la brevedad.</h2>\r\n            { error ? <h3 style={{color: 'red', margin: '0' }}>{error}</h3> : null }\r\n            { success ? <h3 style={{color: 'green', margin: '0' }}>{success}</h3> : null }\r\n            <div className=\"contact-inputs\">\r\n                <div style={{display: 'flex', width: '100%', justifyContent: 'space-around'}}>\r\n                    <input \r\n                        className=\"contact-input\" \r\n                        placeholder=\"Nombre\" \r\n                        name='first_name'\r\n                        type='text'\r\n                        onChange={handleChange}\r\n                        value={first_name}\r\n                        label='Nombre'\r\n                        required\r\n                    />\r\n                    <input\r\n                        className=\"contact-input\" \r\n                        placeholder=\"Apellido\"\r\n                        name='last_name'\r\n                        type='text'\r\n                        value={last_name}\r\n                        onChange={handleChange}\r\n                        label='Apellido'\r\n                        required\r\n                        />\r\n                </div>\r\n                <div style={{display: 'flex', width: '100%', justifyContent: 'space-around'}}>\r\n                    <input\r\n                        className=\"contact-input\" \r\n                        placeholder=\"Correo Electronico\"\r\n                        name='email'\r\n                        type='email'\r\n                        value={email}\r\n                        onChange={handleChange}\r\n                        label='Email'\r\n                        required\r\n                        />\r\n                    <input\r\n                        className=\"contact-input\" \r\n                        placeholder=\"Telefono\"\r\n                        name='phone'\r\n                        type='text'\r\n                        value={phone}\r\n                        onChange={handleChange}\r\n                        label='Telefono'\r\n                        required\r\n                    />\r\n                    \r\n                </div>\r\n                <div style={{display: 'flex', width: '100%', justifyContent: 'space-around'}}>\r\n                    <textarea \r\n                        cols=\"120\" \r\n                        rows=\"10\" \r\n                        maxLength=\"200\" \r\n                        placeholder=\"Escriba su mensaje, maximo 200 caracteres\" \r\n                        value={message} \r\n                        onChange={handleChange}\r\n                        name='message'\r\n                        >                            \r\n                    </textarea>\r\n                </div>\r\n            </div>\r\n            <button className=\"contact-button\" type=\"submit\">Enviar Mensaje</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport './contact.page.styles.css'\r\nimport Contact from '../../components/contact/contact.component';\r\n\r\nconst ContactPage = () => {\r\n    return (\r\n        <div className=\"contact-page-container\">\r\n            <div className=\"contact-page-content-container\">\r\n                <Contact/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContactPage; "],"sourceRoot":""}